#!/usr/bin/env python3

# SPDX-License-Identifier: MIT
# Copyright (c) 2022 Stephan Linz <linz@li-pro.net>

# NOTE: you need `pip3 install ascii_graph`

"""
Simple ADC voltage level at Little Wire pin 2 (channel 1).
"""

from sys import stderr, stdout

from ascii_graph import Pyasciigraph

from verylittlewire import device as vlwd

try:

    # attach to the Little Wire
    lw = vlwd.Device()

    print("----------------------------------------------------------", file=stdout)
    print(
        "> Little Wire device found with serialNumber: " + lw.readSerialNumber(),
        file=stdout,
    )
    print("----------------------------------------------------------", file=stdout)
    print("> Little Wire firmware version: " + lw.readFirmwareVersion(), file=stdout)

    print("----------------------------------------------------------", file=stdout)
    print("Setup each known pin as input for safty operations.", file=stdout)
    for pin in [vlwd.PIN1, vlwd.PIN2, vlwd.PIN3, vlwd.PIN4]:
        lw.pinMode(pin, vlwd.INPUT)

    print("Press ctrl-c to exit.", file=stdout)
    lw.analogInit(vlwd.VREF_VCC)

    graph = Pyasciigraph()

    while 1:
        try:
            levels = [
                (
                    "mV @ ADC_PIN3 (ADC0)",
                    (lw.analogRead(vlwd.ADC_PIN3) * (5000.0)) / 1024.0,
                ),
                (
                    "mV @ ADC_PIN2 (ADC1)",
                    (lw.analogRead(vlwd.ADC_PIN2) * (5000.0)) / 1024.0,
                ),
            ]
            for level in graph.graph("Voltage level:", levels):
                print(level, file=stdout)

        except KeyboardInterrupt:
            break

except ValueError as ex:
    print(str(ex), file=stderr)


# vim: tw=80 ts=4 sw=4 sts=4 sta et ai nu
